import tkinter as tk
import pandas as pd
import numpy as np
import joblib
import re
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords
from nltk.stem import PorterStemmer, WordNetLemmatizer
imdb = pd.read_csv("IMDB-Dataset.csv", index_col=False)
## Download NLTK resources
import nltk
##nltk.download('punkt')
##nltk.download('stopwords')
##nltk.download('wordnet')

## Function to preprocess text data
def preprocess_text(text):
    # Remove punctuation
    text = re.sub(r'[^\w\s]', '', text)
    
    # Tokenization
    tokens = word_tokenize(text)
    
    # Lowercasing
    tokens = [token.lower() for token in tokens]
    
    # Remove stopwords
    stop_words = set(stopwords.words('english'))
    tokens = [token for token in tokens if token not in stop_words]
    
    # Initialize stemmer and lemmatizer
    stemmer = PorterStemmer()
    lemmatizer = WordNetLemmatizer()
    
    # Stemming and Lemmatization
    tokens = [stemmer.stem(token) for token in tokens]
    tokens = [lemmatizer.lemmatize(token) for token in tokens]
    
    # Join tokens back into a single string
    preprocessed_text = ' '.join(tokens)
    
    return preprocessed_text

from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report
model = joblib.load('model.pkl')
model1 = joblib.load('model1.pkl')
vectorizer = joblib.load('vectorizer.pkl')
new_text = ["This movie was amazing!", "This is a terrible movie."]
new_text_preprocessed = [preprocess_text(text) for text in new_text]
new_X = vectorizer.transform(new_text_preprocessed)
new_pred = model.predict(new_X)
##print(new_pred)

def gettext(textx):
    x=textx.split('\n')
    new_text_preprocessed = [preprocess_text(tex) for tex in x]
    new_X = vectorizer.transform(new_text_preprocessed)
    new_pred = model.predict(new_X)
##    print(new_pred)
    l=list(new_pred)
    y=set(l)
    s='\n\n'
    for i in y:
        j='   '+str(round(100*l.count(i)/len(l),2))+'% of the Viewers find the movie '+i
        s+=j
        s+='\n\n'
    return s

        
        
    

root=tk.Tk()
def getv():
    textx=text.get(1.0, "end-1c")
    texty=gettext(textx)
    text1.delete(1.0,"end-1c")
    text1.insert(tk.INSERT,texty)
##    v.set(Text)
##    print('welcome')
     
##    print(Text)
    
root.title('Sentiment Analysis Project')
root.geometry('1280x768')
v=tk.StringVar()
var='Please copy and paste the comments'
l=tk.Label(root,text=var,font=('calibri',12))
l.place(x=25,y=15)
##im=tk.PhotoImage(r'D:\inf sys design\arrow.PNG')
b=tk.Button(root,text='Analyze',width=15,height=5,command=getv)
b.config(font=('Calibri',14))
b.place(x=592,y=290)
text=tk.Text(root,height=40,width=70)
text.place(x=20,y=40)
text1=tk.Text(root,height=10,width=40,bg='yellow',font=('calibri',18))
##text1.config(font=('Calibri',18))
text1.place(x=760,y=200)
##' 40.45% of the Viewers find the movie neutral'

##text.pack()
##l=tk.Label(root,height=40,width=70,textvariable=v)
##l.place(x=600,y=20)
v.set('hello')
##l.pack()


root.mainloop()




##import tkinter as tk 
##  
### Top level window 
##frame = tk.Tk() 
##frame.title("TextBox Input") 
##frame.geometry('400x200') 
### Function for getting Input 
### from textbox and printing it  
### at label widget 
##  
##def printInput(): 
##    inp = inputtxt.get(1.0, "end-1c") 
##    lbl.config(text = "Provided Input: "+inp) 
##  
### TextBox Creation 
##inputtxt = tk.Text(frame, 
##                   height = 5, 
##                   width = 20) 
##  
##inputtxt.pack() 
##  
### Button Creation 
##printButton = tk.Button(frame, 
##                        text = "Print",  
##                        command = printInput) 
##printButton.pack() 
##  
### Label Creation 
##lbl = tk.Label(frame, text = "") 
##lbl.pack() 
##frame.mainloop() 
