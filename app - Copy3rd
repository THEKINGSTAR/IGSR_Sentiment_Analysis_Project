import streamlit as st
import joblib
import matplotlib.pyplot as plt
import seaborn as sns

# Load the model and vectorizer
model = joblib.load('model.pkl')
vectorizer = joblib.load('vectorizer.pkl')

# Define function to preprocess text and predict sentiment
def predict_sentiment(text):
    # Preprocess text using vectorizer
    text_vectorized = vectorizer.transform([text])
    # Predict sentiment using model
    prediction = model.predict(text_vectorized)
    return prediction[0]

# Function to plot sentiment distribution
def plot_sentiment_distribution(data):
    plt.figure(figsize=(8, 6))
    sns.countplot(data, palette='viridis')
    plt.title('Sentiment Distribution')
    plt.xlabel('Sentiment')
    plt.ylabel('Count')
    st.pyplot()

# Streamlit UI
st.title('Sentiment Analysis App')

# User input
user_input = st.text_area('Enter text for sentiment analysis')

# Predict sentiment when user clicks the button
if st.button('Predict Sentiment'):
    if user_input:
        # Preprocess text and predict sentiment
        sentiment = predict_sentiment(user_input)
        st.write(f'Sentiment: {sentiment}')
    else:
        st.warning('Please enter some text.')

# Display sentiment distribution if data is available
if 'data' in locals():
    st.subheader('Sentiment Distribution')
    plot_sentiment_distribution(data)
else:
    st.warning('No data available for sentiment distribution.')

# Footer
st.markdown('---')
st.write('Made with ❤️')
